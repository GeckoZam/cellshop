---
- name: Instalar .NET Core 8 y configurar la aplicación de viñedos
  hosts: localhost  # Ejecución en la instancia local
  become: yes
  tasks:
    - name: Actualizar el sistema
      apt:
        update_cache: yes
        upgrade: dist

    - name: Instalar dependencias necesarias
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Agregar el repositorio de Microsoft
      apt_repository:
        repo: "deb [arch=amd64] https://packages.microsoft.com/repos/ubuntu/ $(lsb_release -cs) main"
        state: present

    - name: Importar la clave de Microsoft
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Instalar .NET SDK
      apt:
        name: dotnet-sdk-8.0
        state: present

    - name: Crear directorio para la aplicación
      file:
        path: /home/ubuntu/vineyard_app
        state: directory

    - name: Crear archivo del proyecto
      copy:
        dest: /home/ubuntu/vineyard_app/vineyard_app.csproj
        content: |
          <Project Sdk="Microsoft.NET.Sdk.Web">

          <PropertyGroup>
              <TargetFramework>net8.0</TargetFramework>
          </PropertyGroup>

          </Project>

    - name: Crear archivo de código fuente
      copy:
        dest: /home/ubuntu/vineyard_app/Program.cs
        content: |
          using System;
          using System.Collections.Generic;
          using Microsoft.AspNetCore.Hosting;
          using Microsoft.Extensions.Hosting;
          using Microsoft.AspNetCore.Builder;
          using Microsoft.Extensions.DependencyInjection;

          namespace VineyardApp
          {
              public class Program
              {
                  public static void Main(string[] args)
                  {
                      CreateHostBuilder(args).Build().Run();
                  }

                  public static IHostBuilder CreateHostBuilder(string[] args) =>
                      Host.CreateDefaultBuilder(args)
                          .ConfigureWebHostDefaults(webBuilder =>
                          {
                              webBuilder.UseStartup<Startup>();
                          });
              }

              public class Startup
              {
                  public void ConfigureServices(IServiceCollection services)
                  {
                      services.AddControllers();
                  }

                  public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
                  {
                      if (env.IsDevelopment())
                      {
                          app.UseDeveloperExceptionPage();
                      }
                      else
                      {
                          app.UseExceptionHandler("/Home/Error");
                          app.UseHsts();
                      }
                      app.UseHttpsRedirection();
                      app.UseRouting();
                      app.UseAuthorization();
                      app.UseEndpoints(endpoints =>
                      {
                          endpoints.MapControllers();
                      });
                  }
              }

              public class Vineyard
              {
                  public string Name { get; set; }
                  public string Location { get; set; }
                  public List<string> Grapes { get; set; }

                  public void PrintDetails()
                  {
                      Console.WriteLine($"Vineyard: {Name}, Location: {Location}, Grapes: {string.Join(", ", Grapes)}");
                  }
              }

              public class VineyardManager
              {
                  private List<Vineyard> vineyards = new List<Vineyard>();

                  public void AddVineyard(string name, string location, List<string> grapes)
                  {
                      var vineyard = new Vineyard { Name = name, Location = location, Grapes = grapes };
                      vineyards.Add(vineyard);
                      vineyard.PrintDetails();
                  }
              }
          }

    - name: Construir la aplicación de viñedos
      command: dotnet build /home/ubuntu/vineyard_app/vineyard_app.csproj
      args:
        chdir: /home/ubuntu/vineyard_app

    - name: Ejecutar la aplicación
      command: dotnet run --urls "http://0.0.0.0:5000"
      args:
        chdir: /home/ubuntu/vineyard_app
      async: 10 # Ejecutar el comando de forma asíncrona para permitir que el proceso siga ejecutándose
      poll: 0 # No esperar la finalización del comando
